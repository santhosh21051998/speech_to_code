let dictated = [
    // `variable person count = 2000` // After let until equals all are concatenated. equals => = type
    `let is Animating = 3`,
    `let exception = not a number`,
    `variable code = string #include<iostream.h>`,
    `operation 5 plus 10 plus 15`,
    `constant pi = 3.14`,
    `let is clock present = true`,
    `function color change`,
    `arguments name next id next object next is animating`,
    `variable b = list name next string age next 12 next time next true next false`,
    `constant pi = 3.14`,
    `let is clock present = true`,
    `close`,
    `console log hello world`,
    `close`,
    `function is animating`,
    `let is Animating = 3`,
    `let is number = not a number`,
    `variable code = string #include<iostream.h>`,
    `constant pi = 3.14`,
    `return 1`,
    `close`,
    `operation plus minus into by percentage increment decrement equals`,
    `operation plus equals 12 minus equals 36 into equals by equals percentage equals`,
    `operation equal to triple equals not equal to not triple equals greater than less than greater than equals less than equals`,
    `operation and or not`,
    `operation bitwise and bitwise or bitwise not left shift right shift`,
    `list `,
    `variable a = list 1 next 2 next 3 next 4`,
    `variable b = list name next string age next 12 next time next true next false`,
    `let d = object is animating = true next name = string sivanesh is in multi verse. next age = 12`,
    `close`,
    `comment hello world`,
    `comment paragraph`,
    `list `,
    `variable a = list 1 next 2 next 3 next 4`,
    `variable b = list name next string age next 12 next time next true next false`,
    `close`,
     `let is Animating = 3`,
     `let is number = not a number`,
     `object`,
     `close`,
     `function clock`,
     `arguments small tick next big tick next alarm`,
     `let a = 12`,
     `let e = object small tick = 5 next big tick = 12`,
     `close`,
     `close`,
]
